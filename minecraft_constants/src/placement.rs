// DO NOT MANUALLY EDIT THIS FILE
// This file has been autogenerated by minecraft_constants/build.rs
// Data is provided courtesy of `https://github.com/Minestom/MinestomDataGenerator`

use crate::block_parameter::*;

use crate::item::Item;

use crate::block::Block;

pub trait PlacementContext {
	fn get_clicked_axis(&mut self) -> Axis3D;
	fn get_clicked_half(&mut self) -> Half;
	fn get_facing_big_dripleaf(&mut self) -> Direction;
	fn get_facing_clicked(&mut self) -> Facing;
	fn get_facing_clicked_horizontal_opposite_else_down(&mut self) -> DirectionOrDown;
	fn get_facing_look(&mut self) -> Facing;
	fn get_facing_look_horizontal(&mut self) -> Direction;
	fn get_facing_look_horizontal_nonreplacable_opposite(&mut self) -> Direction;
	fn get_facing_look_horizontal_opposite(&mut self) -> Direction;
	fn get_facing_look_horizontal_plus_90(&mut self) -> Direction;
	fn get_facing_look_horizontal_survivable_opposite(&mut self) -> Direction;
	fn get_facing_look_opposite(&mut self) -> Facing;
	fn get_fence_should_connect_east(&mut self) -> bool;
	fn get_fence_should_connect_north(&mut self) -> bool;
	fn get_fence_should_connect_south(&mut self) -> bool;
	fn get_fence_should_connect_west(&mut self) -> bool;
	fn get_hanging(&mut self) -> bool;
	fn get_instrument_modifier_below(&mut self) -> Instrument;
	fn get_iron_bars_should_connect_east(&mut self) -> bool;
	fn get_iron_bars_should_connect_north(&mut self) -> bool;
	fn get_iron_bars_should_connect_south(&mut self) -> bool;
	fn get_iron_bars_should_connect_west(&mut self) -> bool;
	fn get_leaves_distance(&mut self) -> u8;
	fn get_rail_shape(&mut self) -> RailShape;
	fn get_rail_shape_straight(&mut self) -> StraightRailShape;
	fn get_random_25(&mut self) -> u8;
	fn get_rotation_16(&mut self) -> u8;
	fn get_rotation_16_flipped(&mut self) -> u8;
	fn get_scaffold_distance(&mut self) -> u8;
	fn get_scaffold_is_bottom(&mut self) -> bool;
	fn get_stair_shape(&mut self) -> StairShape;
	fn get_tripwire_should_connect_east(&mut self) -> bool;
	fn get_tripwire_should_connect_north(&mut self) -> bool;
	fn get_tripwire_should_connect_south(&mut self) -> bool;
	fn get_tripwire_should_connect_west(&mut self) -> bool;
	fn has_neighbor_signal(&mut self) -> bool;
	fn has_same_block_above(&mut self) -> bool;
	fn has_same_block_below(&mut self) -> bool;
	fn has_same_block_east(&mut self) -> bool;
	fn has_same_block_north(&mut self) -> bool;
	fn has_same_block_south(&mut self) -> bool;
	fn has_same_block_west(&mut self) -> bool;
	fn has_smoke_source_below(&mut self) -> bool;
	fn has_snow_above(&mut self) -> bool;
	fn is_in_water(&mut self) -> bool;
	fn is_not_in_water(&mut self) -> bool;
	fn is_repeater_locked(&mut self) -> bool;
}

impl Item {
	pub fn try_place(&self, ctx: &mut impl PlacementContext) -> Option<Block> {
		match self {
			Item::Stone => Some(Block::Stone),
			Item::Granite => Some(Block::Granite),
			Item::PolishedGranite => Some(Block::PolishedGranite),
			Item::Diorite => Some(Block::Diorite),
			Item::PolishedDiorite => Some(Block::PolishedDiorite),
			Item::Andesite => Some(Block::Andesite),
			Item::PolishedAndesite => Some(Block::PolishedAndesite),
			Item::Deepslate => Some(Block::Deepslate {
				axis: ctx.get_clicked_axis(),
			}),
			Item::CobbledDeepslate => Some(Block::CobbledDeepslate),
			Item::PolishedDeepslate => Some(Block::PolishedDeepslate),
			Item::Calcite => Some(Block::Calcite),
			Item::Tuff => Some(Block::Tuff),
			Item::DripstoneBlock => Some(Block::DripstoneBlock),
			Item::GrassBlock => Some(Block::GrassBlock {
				snowy: ctx.has_snow_above(),
			}),
			Item::Dirt => Some(Block::Dirt),
			Item::CoarseDirt => Some(Block::CoarseDirt),
			Item::Podzol => Some(Block::Podzol {
				snowy: ctx.has_snow_above(),
			}),
			Item::RootedDirt => Some(Block::RootedDirt),
			Item::Mud => Some(Block::Mud),
			Item::CrimsonNylium => Some(Block::CrimsonNylium),
			Item::WarpedNylium => Some(Block::WarpedNylium),
			Item::Cobblestone => Some(Block::Cobblestone),
			Item::OakPlanks => Some(Block::OakPlanks),
			Item::SprucePlanks => Some(Block::SprucePlanks),
			Item::BirchPlanks => Some(Block::BirchPlanks),
			Item::JunglePlanks => Some(Block::JunglePlanks),
			Item::AcaciaPlanks => Some(Block::AcaciaPlanks),
			Item::DarkOakPlanks => Some(Block::DarkOakPlanks),
			Item::MangrovePlanks => Some(Block::MangrovePlanks),
			Item::CrimsonPlanks => Some(Block::CrimsonPlanks),
			Item::WarpedPlanks => Some(Block::WarpedPlanks),
			Item::OakSapling => Some(Block::OakSapling {
				stage: 0,
			}),
			Item::SpruceSapling => Some(Block::SpruceSapling {
				stage: 0,
			}),
			Item::BirchSapling => Some(Block::BirchSapling {
				stage: 0,
			}),
			Item::JungleSapling => Some(Block::JungleSapling {
				stage: 0,
			}),
			Item::AcaciaSapling => Some(Block::AcaciaSapling {
				stage: 0,
			}),
			Item::DarkOakSapling => Some(Block::DarkOakSapling {
				stage: 0,
			}),
			Item::MangrovePropagule => Some(Block::MangrovePropagule {
				age: 4,
				hanging: false,
				stage: 0,
				waterlogged: ctx.is_in_water(),
			}),
			Item::Bedrock => Some(Block::Bedrock),
			Item::Sand => Some(Block::Sand),
			Item::RedSand => Some(Block::RedSand),
			Item::Gravel => Some(Block::Gravel),
			Item::CoalOre => Some(Block::CoalOre),
			Item::DeepslateCoalOre => Some(Block::DeepslateCoalOre),
			Item::IronOre => Some(Block::IronOre),
			Item::DeepslateIronOre => Some(Block::DeepslateIronOre),
			Item::CopperOre => Some(Block::CopperOre),
			Item::DeepslateCopperOre => Some(Block::DeepslateCopperOre),
			Item::GoldOre => Some(Block::GoldOre),
			Item::DeepslateGoldOre => Some(Block::DeepslateGoldOre),
			Item::RedstoneOre => Some(Block::RedstoneOre {
				lit: false,
			}),
			Item::DeepslateRedstoneOre => Some(Block::DeepslateRedstoneOre {
				lit: false,
			}),
			Item::EmeraldOre => Some(Block::EmeraldOre),
			Item::DeepslateEmeraldOre => Some(Block::DeepslateEmeraldOre),
			Item::LapisOre => Some(Block::LapisOre),
			Item::DeepslateLapisOre => Some(Block::DeepslateLapisOre),
			Item::DiamondOre => Some(Block::DiamondOre),
			Item::DeepslateDiamondOre => Some(Block::DeepslateDiamondOre),
			Item::NetherGoldOre => Some(Block::NetherGoldOre),
			Item::NetherQuartzOre => Some(Block::NetherQuartzOre),
			Item::AncientDebris => Some(Block::AncientDebris),
			Item::CoalBlock => Some(Block::CoalBlock),
			Item::RawIronBlock => Some(Block::RawIronBlock),
			Item::RawCopperBlock => Some(Block::RawCopperBlock),
			Item::RawGoldBlock => Some(Block::RawGoldBlock),
			Item::AmethystBlock => Some(Block::AmethystBlock),
			Item::BuddingAmethyst => Some(Block::BuddingAmethyst),
			Item::IronBlock => Some(Block::IronBlock),
			Item::CopperBlock => Some(Block::CopperBlock),
			Item::GoldBlock => Some(Block::GoldBlock),
			Item::DiamondBlock => Some(Block::DiamondBlock),
			Item::NetheriteBlock => Some(Block::NetheriteBlock),
			Item::ExposedCopper => Some(Block::ExposedCopper),
			Item::WeatheredCopper => Some(Block::WeatheredCopper),
			Item::OxidizedCopper => Some(Block::OxidizedCopper),
			Item::CutCopper => Some(Block::CutCopper),
			Item::ExposedCutCopper => Some(Block::ExposedCutCopper),
			Item::WeatheredCutCopper => Some(Block::WeatheredCutCopper),
			Item::OxidizedCutCopper => Some(Block::OxidizedCutCopper),
			Item::CutCopperStairs => Some(Block::CutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::ExposedCutCopperStairs => Some(Block::ExposedCutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WeatheredCutCopperStairs => Some(Block::WeatheredCutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::OxidizedCutCopperStairs => Some(Block::OxidizedCutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::CutCopperSlab => Some(Block::CutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::ExposedCutCopperSlab => Some(Block::ExposedCutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::WeatheredCutCopperSlab => Some(Block::WeatheredCutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::OxidizedCutCopperSlab => Some(Block::OxidizedCutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::WaxedCopperBlock => Some(Block::WaxedCopperBlock),
			Item::WaxedExposedCopper => Some(Block::WaxedExposedCopper),
			Item::WaxedWeatheredCopper => Some(Block::WaxedWeatheredCopper),
			Item::WaxedOxidizedCopper => Some(Block::WaxedOxidizedCopper),
			Item::WaxedCutCopper => Some(Block::WaxedCutCopper),
			Item::WaxedExposedCutCopper => Some(Block::WaxedExposedCutCopper),
			Item::WaxedWeatheredCutCopper => Some(Block::WaxedWeatheredCutCopper),
			Item::WaxedOxidizedCutCopper => Some(Block::WaxedOxidizedCutCopper),
			Item::WaxedCutCopperStairs => Some(Block::WaxedCutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WaxedExposedCutCopperStairs => Some(Block::WaxedExposedCutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WaxedWeatheredCutCopperStairs => Some(Block::WaxedWeatheredCutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WaxedOxidizedCutCopperStairs => Some(Block::WaxedOxidizedCutCopperStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WaxedCutCopperSlab => Some(Block::WaxedCutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::WaxedExposedCutCopperSlab => Some(Block::WaxedExposedCutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::WaxedWeatheredCutCopperSlab => Some(Block::WaxedWeatheredCutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::WaxedOxidizedCutCopperSlab => Some(Block::WaxedOxidizedCutCopperSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::OakLog => Some(Block::OakLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::SpruceLog => Some(Block::SpruceLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::BirchLog => Some(Block::BirchLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::JungleLog => Some(Block::JungleLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::AcaciaLog => Some(Block::AcaciaLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::DarkOakLog => Some(Block::DarkOakLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::MangroveLog => Some(Block::MangroveLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::MangroveRoots => Some(Block::MangroveRoots {
				waterlogged: ctx.is_in_water(),
			}),
			Item::MuddyMangroveRoots => Some(Block::MuddyMangroveRoots {
				axis: ctx.get_clicked_axis(),
			}),
			Item::CrimsonStem => Some(Block::CrimsonStem {
				axis: ctx.get_clicked_axis(),
			}),
			Item::WarpedStem => Some(Block::WarpedStem {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedOakLog => Some(Block::StrippedOakLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedSpruceLog => Some(Block::StrippedSpruceLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedBirchLog => Some(Block::StrippedBirchLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedJungleLog => Some(Block::StrippedJungleLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedAcaciaLog => Some(Block::StrippedAcaciaLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedDarkOakLog => Some(Block::StrippedDarkOakLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedMangroveLog => Some(Block::StrippedMangroveLog {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedCrimsonStem => Some(Block::StrippedCrimsonStem {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedWarpedStem => Some(Block::StrippedWarpedStem {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedOakWood => Some(Block::StrippedOakWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedSpruceWood => Some(Block::StrippedSpruceWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedBirchWood => Some(Block::StrippedBirchWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedJungleWood => Some(Block::StrippedJungleWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedAcaciaWood => Some(Block::StrippedAcaciaWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedDarkOakWood => Some(Block::StrippedDarkOakWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedMangroveWood => Some(Block::StrippedMangroveWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedCrimsonHyphae => Some(Block::StrippedCrimsonHyphae {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StrippedWarpedHyphae => Some(Block::StrippedWarpedHyphae {
				axis: ctx.get_clicked_axis(),
			}),
			Item::OakWood => Some(Block::OakWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::SpruceWood => Some(Block::SpruceWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::BirchWood => Some(Block::BirchWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::JungleWood => Some(Block::JungleWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::AcaciaWood => Some(Block::AcaciaWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::DarkOakWood => Some(Block::DarkOakWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::MangroveWood => Some(Block::MangroveWood {
				axis: ctx.get_clicked_axis(),
			}),
			Item::CrimsonHyphae => Some(Block::CrimsonHyphae {
				axis: ctx.get_clicked_axis(),
			}),
			Item::WarpedHyphae => Some(Block::WarpedHyphae {
				axis: ctx.get_clicked_axis(),
			}),
			Item::OakLeaves => Some(Block::OakLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::SpruceLeaves => Some(Block::SpruceLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::BirchLeaves => Some(Block::BirchLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::JungleLeaves => Some(Block::JungleLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::AcaciaLeaves => Some(Block::AcaciaLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::DarkOakLeaves => Some(Block::DarkOakLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::MangroveLeaves => Some(Block::MangroveLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::AzaleaLeaves => Some(Block::AzaleaLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::FloweringAzaleaLeaves => Some(Block::FloweringAzaleaLeaves {
				distance: ctx.get_leaves_distance(),
				persistent: true,
				waterlogged: ctx.is_in_water(),
			}),
			Item::Sponge => Some(Block::Sponge),
			Item::WetSponge => Some(Block::WetSponge),
			Item::Glass => Some(Block::Glass),
			Item::TintedGlass => Some(Block::TintedGlass),
			Item::LapisBlock => Some(Block::LapisBlock),
			Item::Sandstone => Some(Block::Sandstone),
			Item::ChiseledSandstone => Some(Block::ChiseledSandstone),
			Item::CutSandstone => Some(Block::CutSandstone),
			Item::Cobweb => Some(Block::Cobweb),
			Item::Grass => Some(Block::Grass),
			Item::Fern => Some(Block::Fern),
			Item::Azalea => Some(Block::Azalea),
			Item::FloweringAzalea => Some(Block::FloweringAzalea),
			Item::DeadBush => Some(Block::DeadBush),
			Item::Seagrass => Some(Block::Seagrass),
			Item::SeaPickle => Some(Block::SeaPickle {
				pickles: 1,
				waterlogged: true,
			}),
			Item::WhiteWool => Some(Block::WhiteWool),
			Item::OrangeWool => Some(Block::OrangeWool),
			Item::MagentaWool => Some(Block::MagentaWool),
			Item::LightBlueWool => Some(Block::LightBlueWool),
			Item::YellowWool => Some(Block::YellowWool),
			Item::LimeWool => Some(Block::LimeWool),
			Item::PinkWool => Some(Block::PinkWool),
			Item::GrayWool => Some(Block::GrayWool),
			Item::LightGrayWool => Some(Block::LightGrayWool),
			Item::CyanWool => Some(Block::CyanWool),
			Item::PurpleWool => Some(Block::PurpleWool),
			Item::BlueWool => Some(Block::BlueWool),
			Item::BrownWool => Some(Block::BrownWool),
			Item::GreenWool => Some(Block::GreenWool),
			Item::RedWool => Some(Block::RedWool),
			Item::BlackWool => Some(Block::BlackWool),
			Item::Dandelion => Some(Block::Dandelion),
			Item::Poppy => Some(Block::Poppy),
			Item::BlueOrchid => Some(Block::BlueOrchid),
			Item::Allium => Some(Block::Allium),
			Item::AzureBluet => Some(Block::AzureBluet),
			Item::RedTulip => Some(Block::RedTulip),
			Item::OrangeTulip => Some(Block::OrangeTulip),
			Item::WhiteTulip => Some(Block::WhiteTulip),
			Item::PinkTulip => Some(Block::PinkTulip),
			Item::OxeyeDaisy => Some(Block::OxeyeDaisy),
			Item::Cornflower => Some(Block::Cornflower),
			Item::LilyOfTheValley => Some(Block::LilyOfTheValley),
			Item::WitherRose => Some(Block::WitherRose),
			Item::SporeBlossom => Some(Block::SporeBlossom),
			Item::BrownMushroom => Some(Block::BrownMushroom),
			Item::RedMushroom => Some(Block::RedMushroom),
			Item::CrimsonFungus => Some(Block::CrimsonFungus),
			Item::WarpedFungus => Some(Block::WarpedFungus),
			Item::CrimsonRoots => Some(Block::CrimsonRoots),
			Item::WarpedRoots => Some(Block::WarpedRoots),
			Item::NetherSprouts => Some(Block::NetherSprouts),
			Item::WeepingVines => Some(Block::WeepingVines {
				age: ctx.get_random_25(),
			}),
			Item::TwistingVines => Some(Block::TwistingVines {
				age: ctx.get_random_25(),
			}),
			Item::SugarCane => Some(Block::SugarCane {
				age: 0,
			}),
			Item::Kelp => Some(Block::Kelp {
				age: ctx.get_random_25(),
			}),
			Item::MossCarpet => Some(Block::MossCarpet),
			Item::MossBlock => Some(Block::MossBlock),
			Item::HangingRoots => Some(Block::HangingRoots {
				waterlogged: ctx.is_in_water(),
			}),
			Item::BigDripleaf => Some(Block::BigDripleaf {
				facing: ctx.get_facing_big_dripleaf(),
				tilt: Tilt::None,
				waterlogged: ctx.is_in_water(),
			}),
			Item::SmallDripleaf => Some(Block::SmallDripleaf {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				waterlogged: false,
			}),
			Item::Bamboo => Some(Block::Bamboo {
				age: 0,
				leaves: Leaves::None,
				stage: 0,
			}),
			Item::OakSlab => Some(Block::OakSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::SpruceSlab => Some(Block::SpruceSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::BirchSlab => Some(Block::BirchSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::JungleSlab => Some(Block::JungleSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::AcaciaSlab => Some(Block::AcaciaSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::DarkOakSlab => Some(Block::DarkOakSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::MangroveSlab => Some(Block::MangroveSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::CrimsonSlab => Some(Block::CrimsonSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::WarpedSlab => Some(Block::WarpedSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::StoneSlab => Some(Block::StoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::SmoothStoneSlab => Some(Block::SmoothStoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::SandstoneSlab => Some(Block::SandstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::CutSandstoneSlab => Some(Block::CutSandstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PetrifiedOakSlab => Some(Block::PetrifiedOakSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::CobblestoneSlab => Some(Block::CobblestoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::BrickSlab => Some(Block::BrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::StoneBrickSlab => Some(Block::StoneBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::MudBrickSlab => Some(Block::MudBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::NetherBrickSlab => Some(Block::NetherBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::QuartzSlab => Some(Block::QuartzSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::RedSandstoneSlab => Some(Block::RedSandstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::CutRedSandstoneSlab => Some(Block::CutRedSandstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PurpurSlab => Some(Block::PurpurSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PrismarineSlab => Some(Block::PrismarineSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PrismarineBrickSlab => Some(Block::PrismarineBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::DarkPrismarineSlab => Some(Block::DarkPrismarineSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::SmoothQuartz => Some(Block::SmoothQuartz),
			Item::SmoothRedSandstone => Some(Block::SmoothRedSandstone),
			Item::SmoothSandstone => Some(Block::SmoothSandstone),
			Item::SmoothStone => Some(Block::SmoothStone),
			Item::Bricks => Some(Block::Bricks),
			Item::Bookshelf => Some(Block::Bookshelf),
			Item::MossyCobblestone => Some(Block::MossyCobblestone),
			Item::Obsidian => Some(Block::Obsidian),
			Item::Torch => Some(Block::Torch),
			Item::EndRod => Some(Block::EndRod {
				facing: Facing::Up,
			}),
			Item::ChorusPlant => Some(Block::ChorusPlant {
				down: false,
				east: false,
				north: false,
				south: false,
				up: false,
				west: false,
			}),
			Item::ChorusFlower => Some(Block::ChorusFlower {
				age: 0,
			}),
			Item::PurpurBlock => Some(Block::PurpurBlock),
			Item::PurpurPillar => Some(Block::PurpurPillar {
				axis: ctx.get_clicked_axis(),
			}),
			Item::PurpurStairs => Some(Block::PurpurStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::Spawner => Some(Block::Spawner),
			Item::Chest => Some(Block::Chest {
				facing: Direction::North,
				block_type: ChestType::Single,
				waterlogged: false,
			}),
			Item::CraftingTable => Some(Block::CraftingTable),
			Item::Farmland => Some(Block::Farmland {
				moisture: 0,
			}),
			Item::Furnace => Some(Block::Furnace {
				facing: ctx.get_facing_look_horizontal_opposite(),
				lit: false,
			}),
			Item::Ladder => Some(Block::Ladder {
				facing: ctx.get_facing_look_horizontal_survivable_opposite(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::CobblestoneStairs => Some(Block::CobblestoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::Snow => Some(Block::Snow {
				layers: 1,
			}),
			Item::Ice => Some(Block::Ice),
			Item::SnowBlock => Some(Block::SnowBlock),
			Item::Cactus => Some(Block::Cactus {
				age: 0,
			}),
			Item::Clay => Some(Block::Clay),
			Item::Jukebox => Some(Block::Jukebox {
				has_record: false,
			}),
			Item::OakFence => Some(Block::OakFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::SpruceFence => Some(Block::SpruceFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::BirchFence => Some(Block::BirchFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::JungleFence => Some(Block::JungleFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::AcaciaFence => Some(Block::AcaciaFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::DarkOakFence => Some(Block::DarkOakFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::MangroveFence => Some(Block::MangroveFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::CrimsonFence => Some(Block::CrimsonFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::WarpedFence => Some(Block::WarpedFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::Pumpkin => Some(Block::Pumpkin),
			Item::CarvedPumpkin => Some(Block::CarvedPumpkin {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::JackOLantern => Some(Block::JackOLantern {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::Netherrack => Some(Block::Netherrack),
			Item::SoulSand => Some(Block::SoulSand),
			Item::SoulSoil => Some(Block::SoulSoil),
			Item::Basalt => Some(Block::Basalt {
				axis: ctx.get_clicked_axis(),
			}),
			Item::PolishedBasalt => Some(Block::PolishedBasalt {
				axis: ctx.get_clicked_axis(),
			}),
			Item::SmoothBasalt => Some(Block::SmoothBasalt),
			Item::SoulTorch => Some(Block::SoulTorch),
			Item::Glowstone => Some(Block::Glowstone),
			Item::InfestedStone => Some(Block::InfestedStone),
			Item::InfestedCobblestone => Some(Block::InfestedCobblestone),
			Item::InfestedStoneBricks => Some(Block::InfestedStoneBricks),
			Item::InfestedMossyStoneBricks => Some(Block::InfestedMossyStoneBricks),
			Item::InfestedCrackedStoneBricks => Some(Block::InfestedCrackedStoneBricks),
			Item::InfestedChiseledStoneBricks => Some(Block::InfestedChiseledStoneBricks),
			Item::InfestedDeepslate => Some(Block::InfestedDeepslate {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StoneBricks => Some(Block::StoneBricks),
			Item::MossyStoneBricks => Some(Block::MossyStoneBricks),
			Item::CrackedStoneBricks => Some(Block::CrackedStoneBricks),
			Item::ChiseledStoneBricks => Some(Block::ChiseledStoneBricks),
			Item::PackedMud => Some(Block::PackedMud),
			Item::MudBricks => Some(Block::MudBricks),
			Item::DeepslateBricks => Some(Block::DeepslateBricks),
			Item::CrackedDeepslateBricks => Some(Block::CrackedDeepslateBricks),
			Item::DeepslateTiles => Some(Block::DeepslateTiles),
			Item::CrackedDeepslateTiles => Some(Block::CrackedDeepslateTiles),
			Item::ChiseledDeepslate => Some(Block::ChiseledDeepslate),
			Item::ReinforcedDeepslate => Some(Block::ReinforcedDeepslate),
			Item::BrownMushroomBlock => Some(Block::BrownMushroomBlock {
				down: ctx.has_same_block_below(),
				east: ctx.has_same_block_east(),
				north: ctx.has_same_block_north(),
				south: ctx.has_same_block_south(),
				up: ctx.has_same_block_above(),
				west: ctx.has_same_block_west(),
			}),
			Item::RedMushroomBlock => Some(Block::RedMushroomBlock {
				down: ctx.has_same_block_below(),
				east: ctx.has_same_block_east(),
				north: ctx.has_same_block_north(),
				south: ctx.has_same_block_south(),
				up: ctx.has_same_block_above(),
				west: ctx.has_same_block_west(),
			}),
			Item::MushroomStem => Some(Block::MushroomStem {
				down: ctx.has_same_block_below(),
				east: ctx.has_same_block_east(),
				north: ctx.has_same_block_north(),
				south: ctx.has_same_block_south(),
				up: ctx.has_same_block_above(),
				west: ctx.has_same_block_west(),
			}),
			Item::IronBars => Some(Block::IronBars {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::Chain => Some(Block::Chain {
				axis: ctx.get_clicked_axis(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::GlassPane => Some(Block::GlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::Melon => Some(Block::Melon),
			Item::Vine => Some(Block::Vine {
				east: false,
				north: false,
				south: false,
				up: false,
				west: false,
			}),
			Item::GlowLichen => Some(Block::GlowLichen {
				down: false,
				east: false,
				north: false,
				south: false,
				up: false,
				waterlogged: false,
				west: false,
			}),
			Item::BrickStairs => Some(Block::BrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::StoneBrickStairs => Some(Block::StoneBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::MudBrickStairs => Some(Block::MudBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::Mycelium => Some(Block::Mycelium {
				snowy: ctx.has_snow_above(),
			}),
			Item::LilyPad => Some(Block::LilyPad),
			Item::NetherBricks => Some(Block::NetherBricks),
			Item::CrackedNetherBricks => Some(Block::CrackedNetherBricks),
			Item::ChiseledNetherBricks => Some(Block::ChiseledNetherBricks),
			Item::NetherBrickFence => Some(Block::NetherBrickFence {
				east: ctx.get_fence_should_connect_east(),
				north: ctx.get_fence_should_connect_north(),
				south: ctx.get_fence_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_fence_should_connect_west(),
			}),
			Item::NetherBrickStairs => Some(Block::NetherBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::Sculk => Some(Block::Sculk),
			Item::SculkVein => Some(Block::SculkVein {
				down: false,
				east: false,
				north: false,
				south: false,
				up: false,
				waterlogged: false,
				west: false,
			}),
			Item::SculkCatalyst => Some(Block::SculkCatalyst {
				bloom: false,
			}),
			Item::SculkShrieker => Some(Block::SculkShrieker {
				can_summon: false,
				shrieking: false,
				waterlogged: ctx.is_in_water(),
			}),
			Item::EnchantingTable => Some(Block::EnchantingTable),
			Item::EndPortalFrame => Some(Block::EndPortalFrame {
				eye: false,
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::EndStone => Some(Block::EndStone),
			Item::EndStoneBricks => Some(Block::EndStoneBricks),
			Item::DragonEgg => Some(Block::DragonEgg),
			Item::SandstoneStairs => Some(Block::SandstoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::EnderChest => Some(Block::EnderChest {
				facing: ctx.get_facing_look_horizontal_opposite(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::EmeraldBlock => Some(Block::EmeraldBlock),
			Item::OakStairs => Some(Block::OakStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SpruceStairs => Some(Block::SpruceStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::BirchStairs => Some(Block::BirchStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::JungleStairs => Some(Block::JungleStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::AcaciaStairs => Some(Block::AcaciaStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::DarkOakStairs => Some(Block::DarkOakStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::MangroveStairs => Some(Block::MangroveStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::CrimsonStairs => Some(Block::CrimsonStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WarpedStairs => Some(Block::WarpedStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::CommandBlock => Some(Block::CommandBlock {
				conditional: false,
				facing: ctx.get_facing_look_opposite(),
			}),
			Item::Beacon => Some(Block::Beacon),
			Item::CobblestoneWall => Some(Block::CobblestoneWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::MossyCobblestoneWall => Some(Block::MossyCobblestoneWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::BrickWall => Some(Block::BrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::PrismarineWall => Some(Block::PrismarineWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::RedSandstoneWall => Some(Block::RedSandstoneWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::MossyStoneBrickWall => Some(Block::MossyStoneBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::GraniteWall => Some(Block::GraniteWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::StoneBrickWall => Some(Block::StoneBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::MudBrickWall => Some(Block::MudBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::NetherBrickWall => Some(Block::NetherBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::AndesiteWall => Some(Block::AndesiteWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::RedNetherBrickWall => Some(Block::RedNetherBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::SandstoneWall => Some(Block::SandstoneWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::EndStoneBrickWall => Some(Block::EndStoneBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::DioriteWall => Some(Block::DioriteWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::BlackstoneWall => Some(Block::BlackstoneWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::PolishedBlackstoneWall => Some(Block::PolishedBlackstoneWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::PolishedBlackstoneBrickWall => Some(Block::PolishedBlackstoneBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::CobbledDeepslateWall => Some(Block::CobbledDeepslateWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::PolishedDeepslateWall => Some(Block::PolishedDeepslateWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::DeepslateBrickWall => Some(Block::DeepslateBrickWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::DeepslateTileWall => Some(Block::DeepslateTileWall {
				east: WallConnection::None,
				north: WallConnection::None,
				south: WallConnection::None,
				up: true,
				waterlogged: false,
				west: WallConnection::None,
			}),
			Item::Anvil => Some(Block::Anvil {
				facing: ctx.get_facing_look_horizontal_plus_90(),
			}),
			Item::ChippedAnvil => Some(Block::ChippedAnvil {
				facing: ctx.get_facing_look_horizontal_plus_90(),
			}),
			Item::DamagedAnvil => Some(Block::DamagedAnvil {
				facing: ctx.get_facing_look_horizontal_plus_90(),
			}),
			Item::ChiseledQuartzBlock => Some(Block::ChiseledQuartzBlock),
			Item::QuartzBlock => Some(Block::QuartzBlock),
			Item::QuartzBricks => Some(Block::QuartzBricks),
			Item::QuartzPillar => Some(Block::QuartzPillar {
				axis: ctx.get_clicked_axis(),
			}),
			Item::QuartzStairs => Some(Block::QuartzStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WhiteTerracotta => Some(Block::WhiteTerracotta),
			Item::OrangeTerracotta => Some(Block::OrangeTerracotta),
			Item::MagentaTerracotta => Some(Block::MagentaTerracotta),
			Item::LightBlueTerracotta => Some(Block::LightBlueTerracotta),
			Item::YellowTerracotta => Some(Block::YellowTerracotta),
			Item::LimeTerracotta => Some(Block::LimeTerracotta),
			Item::PinkTerracotta => Some(Block::PinkTerracotta),
			Item::GrayTerracotta => Some(Block::GrayTerracotta),
			Item::LightGrayTerracotta => Some(Block::LightGrayTerracotta),
			Item::CyanTerracotta => Some(Block::CyanTerracotta),
			Item::PurpleTerracotta => Some(Block::PurpleTerracotta),
			Item::BlueTerracotta => Some(Block::BlueTerracotta),
			Item::BrownTerracotta => Some(Block::BrownTerracotta),
			Item::GreenTerracotta => Some(Block::GreenTerracotta),
			Item::RedTerracotta => Some(Block::RedTerracotta),
			Item::BlackTerracotta => Some(Block::BlackTerracotta),
			Item::Barrier => Some(Block::Barrier),
			Item::Light => Some(Block::Light {
				level: 15,
				waterlogged: false,
			}),
			Item::HayBlock => Some(Block::HayBlock {
				axis: ctx.get_clicked_axis(),
			}),
			Item::WhiteCarpet => Some(Block::WhiteCarpet),
			Item::OrangeCarpet => Some(Block::OrangeCarpet),
			Item::MagentaCarpet => Some(Block::MagentaCarpet),
			Item::LightBlueCarpet => Some(Block::LightBlueCarpet),
			Item::YellowCarpet => Some(Block::YellowCarpet),
			Item::LimeCarpet => Some(Block::LimeCarpet),
			Item::PinkCarpet => Some(Block::PinkCarpet),
			Item::GrayCarpet => Some(Block::GrayCarpet),
			Item::LightGrayCarpet => Some(Block::LightGrayCarpet),
			Item::CyanCarpet => Some(Block::CyanCarpet),
			Item::PurpleCarpet => Some(Block::PurpleCarpet),
			Item::BlueCarpet => Some(Block::BlueCarpet),
			Item::BrownCarpet => Some(Block::BrownCarpet),
			Item::GreenCarpet => Some(Block::GreenCarpet),
			Item::RedCarpet => Some(Block::RedCarpet),
			Item::BlackCarpet => Some(Block::BlackCarpet),
			Item::Terracotta => Some(Block::Terracotta),
			Item::PackedIce => Some(Block::PackedIce),
			Item::DirtPath => Some(Block::DirtPath),
			Item::Sunflower => Some(Block::Sunflower {
				half: UpperOrLower::Lower,
			}),
			Item::Lilac => Some(Block::Lilac {
				half: UpperOrLower::Lower,
			}),
			Item::RoseBush => Some(Block::RoseBush {
				half: UpperOrLower::Lower,
			}),
			Item::Peony => Some(Block::Peony {
				half: UpperOrLower::Lower,
			}),
			Item::TallGrass => Some(Block::TallGrass {
				half: UpperOrLower::Lower,
			}),
			Item::LargeFern => Some(Block::LargeFern {
				half: UpperOrLower::Lower,
			}),
			Item::WhiteStainedGlass => Some(Block::WhiteStainedGlass),
			Item::OrangeStainedGlass => Some(Block::OrangeStainedGlass),
			Item::MagentaStainedGlass => Some(Block::MagentaStainedGlass),
			Item::LightBlueStainedGlass => Some(Block::LightBlueStainedGlass),
			Item::YellowStainedGlass => Some(Block::YellowStainedGlass),
			Item::LimeStainedGlass => Some(Block::LimeStainedGlass),
			Item::PinkStainedGlass => Some(Block::PinkStainedGlass),
			Item::GrayStainedGlass => Some(Block::GrayStainedGlass),
			Item::LightGrayStainedGlass => Some(Block::LightGrayStainedGlass),
			Item::CyanStainedGlass => Some(Block::CyanStainedGlass),
			Item::PurpleStainedGlass => Some(Block::PurpleStainedGlass),
			Item::BlueStainedGlass => Some(Block::BlueStainedGlass),
			Item::BrownStainedGlass => Some(Block::BrownStainedGlass),
			Item::GreenStainedGlass => Some(Block::GreenStainedGlass),
			Item::RedStainedGlass => Some(Block::RedStainedGlass),
			Item::BlackStainedGlass => Some(Block::BlackStainedGlass),
			Item::WhiteStainedGlassPane => Some(Block::WhiteStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::OrangeStainedGlassPane => Some(Block::OrangeStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::MagentaStainedGlassPane => Some(Block::MagentaStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::LightBlueStainedGlassPane => Some(Block::LightBlueStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::YellowStainedGlassPane => Some(Block::YellowStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::LimeStainedGlassPane => Some(Block::LimeStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::PinkStainedGlassPane => Some(Block::PinkStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::GrayStainedGlassPane => Some(Block::GrayStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::LightGrayStainedGlassPane => Some(Block::LightGrayStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::CyanStainedGlassPane => Some(Block::CyanStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::PurpleStainedGlassPane => Some(Block::PurpleStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::BlueStainedGlassPane => Some(Block::BlueStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::BrownStainedGlassPane => Some(Block::BrownStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::GreenStainedGlassPane => Some(Block::GreenStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::RedStainedGlassPane => Some(Block::RedStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::BlackStainedGlassPane => Some(Block::BlackStainedGlassPane {
				east: ctx.get_iron_bars_should_connect_east(),
				north: ctx.get_iron_bars_should_connect_north(),
				south: ctx.get_iron_bars_should_connect_south(),
				waterlogged: ctx.is_in_water(),
				west: ctx.get_iron_bars_should_connect_west(),
			}),
			Item::Prismarine => Some(Block::Prismarine),
			Item::PrismarineBricks => Some(Block::PrismarineBricks),
			Item::DarkPrismarine => Some(Block::DarkPrismarine),
			Item::PrismarineStairs => Some(Block::PrismarineStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::PrismarineBrickStairs => Some(Block::PrismarineBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::DarkPrismarineStairs => Some(Block::DarkPrismarineStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SeaLantern => Some(Block::SeaLantern),
			Item::RedSandstone => Some(Block::RedSandstone),
			Item::ChiseledRedSandstone => Some(Block::ChiseledRedSandstone),
			Item::CutRedSandstone => Some(Block::CutRedSandstone),
			Item::RedSandstoneStairs => Some(Block::RedSandstoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::RepeatingCommandBlock => Some(Block::RepeatingCommandBlock {
				conditional: false,
				facing: ctx.get_facing_look_opposite(),
			}),
			Item::ChainCommandBlock => Some(Block::ChainCommandBlock {
				conditional: false,
				facing: ctx.get_facing_look_opposite(),
			}),
			Item::MagmaBlock => Some(Block::MagmaBlock),
			Item::NetherWartBlock => Some(Block::NetherWartBlock),
			Item::WarpedWartBlock => Some(Block::WarpedWartBlock),
			Item::RedNetherBricks => Some(Block::RedNetherBricks),
			Item::BoneBlock => Some(Block::BoneBlock {
				axis: ctx.get_clicked_axis(),
			}),
			Item::StructureVoid => Some(Block::StructureVoid),
			Item::ShulkerBox => Some(Block::ShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::WhiteShulkerBox => Some(Block::WhiteShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::OrangeShulkerBox => Some(Block::OrangeShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::MagentaShulkerBox => Some(Block::MagentaShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::LightBlueShulkerBox => Some(Block::LightBlueShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::YellowShulkerBox => Some(Block::YellowShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::LimeShulkerBox => Some(Block::LimeShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::PinkShulkerBox => Some(Block::PinkShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::GrayShulkerBox => Some(Block::GrayShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::LightGrayShulkerBox => Some(Block::LightGrayShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::CyanShulkerBox => Some(Block::CyanShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::PurpleShulkerBox => Some(Block::PurpleShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::BlueShulkerBox => Some(Block::BlueShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::BrownShulkerBox => Some(Block::BrownShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::GreenShulkerBox => Some(Block::GreenShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::RedShulkerBox => Some(Block::RedShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::BlackShulkerBox => Some(Block::BlackShulkerBox {
				facing: ctx.get_facing_clicked(),
			}),
			Item::WhiteGlazedTerracotta => Some(Block::WhiteGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::OrangeGlazedTerracotta => Some(Block::OrangeGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::MagentaGlazedTerracotta => Some(Block::MagentaGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::LightBlueGlazedTerracotta => Some(Block::LightBlueGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::YellowGlazedTerracotta => Some(Block::YellowGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::LimeGlazedTerracotta => Some(Block::LimeGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::PinkGlazedTerracotta => Some(Block::PinkGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::GrayGlazedTerracotta => Some(Block::GrayGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::LightGrayGlazedTerracotta => Some(Block::LightGrayGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::CyanGlazedTerracotta => Some(Block::CyanGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::PurpleGlazedTerracotta => Some(Block::PurpleGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::BlueGlazedTerracotta => Some(Block::BlueGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::BrownGlazedTerracotta => Some(Block::BrownGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::GreenGlazedTerracotta => Some(Block::GreenGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::RedGlazedTerracotta => Some(Block::RedGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::BlackGlazedTerracotta => Some(Block::BlackGlazedTerracotta {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::WhiteConcrete => Some(Block::WhiteConcrete),
			Item::OrangeConcrete => Some(Block::OrangeConcrete),
			Item::MagentaConcrete => Some(Block::MagentaConcrete),
			Item::LightBlueConcrete => Some(Block::LightBlueConcrete),
			Item::YellowConcrete => Some(Block::YellowConcrete),
			Item::LimeConcrete => Some(Block::LimeConcrete),
			Item::PinkConcrete => Some(Block::PinkConcrete),
			Item::GrayConcrete => Some(Block::GrayConcrete),
			Item::LightGrayConcrete => Some(Block::LightGrayConcrete),
			Item::CyanConcrete => Some(Block::CyanConcrete),
			Item::PurpleConcrete => Some(Block::PurpleConcrete),
			Item::BlueConcrete => Some(Block::BlueConcrete),
			Item::BrownConcrete => Some(Block::BrownConcrete),
			Item::GreenConcrete => Some(Block::GreenConcrete),
			Item::RedConcrete => Some(Block::RedConcrete),
			Item::BlackConcrete => Some(Block::BlackConcrete),
			Item::WhiteConcretePowder => Some(Block::WhiteConcretePowder),
			Item::OrangeConcretePowder => Some(Block::OrangeConcretePowder),
			Item::MagentaConcretePowder => Some(Block::MagentaConcretePowder),
			Item::LightBlueConcretePowder => Some(Block::LightBlueConcretePowder),
			Item::YellowConcretePowder => Some(Block::YellowConcretePowder),
			Item::LimeConcretePowder => Some(Block::LimeConcretePowder),
			Item::PinkConcretePowder => Some(Block::PinkConcretePowder),
			Item::GrayConcretePowder => Some(Block::GrayConcretePowder),
			Item::LightGrayConcretePowder => Some(Block::LightGrayConcretePowder),
			Item::CyanConcretePowder => Some(Block::CyanConcretePowder),
			Item::PurpleConcretePowder => Some(Block::PurpleConcretePowder),
			Item::BlueConcretePowder => Some(Block::BlueConcretePowder),
			Item::BrownConcretePowder => Some(Block::BrownConcretePowder),
			Item::GreenConcretePowder => Some(Block::GreenConcretePowder),
			Item::RedConcretePowder => Some(Block::RedConcretePowder),
			Item::BlackConcretePowder => Some(Block::BlackConcretePowder),
			Item::TurtleEgg => Some(Block::TurtleEgg {
				eggs: 1,
				hatch: 0,
			}),
			Item::DeadTubeCoralBlock => Some(Block::DeadTubeCoralBlock),
			Item::DeadBrainCoralBlock => Some(Block::DeadBrainCoralBlock),
			Item::DeadBubbleCoralBlock => Some(Block::DeadBubbleCoralBlock),
			Item::DeadFireCoralBlock => Some(Block::DeadFireCoralBlock),
			Item::DeadHornCoralBlock => Some(Block::DeadHornCoralBlock),
			Item::TubeCoralBlock => Some(Block::TubeCoralBlock),
			Item::BrainCoralBlock => Some(Block::BrainCoralBlock),
			Item::BubbleCoralBlock => Some(Block::BubbleCoralBlock),
			Item::FireCoralBlock => Some(Block::FireCoralBlock),
			Item::HornCoralBlock => Some(Block::HornCoralBlock),
			Item::TubeCoral => Some(Block::TubeCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::BrainCoral => Some(Block::BrainCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::BubbleCoral => Some(Block::BubbleCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::FireCoral => Some(Block::FireCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::HornCoral => Some(Block::HornCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadBrainCoral => Some(Block::DeadBrainCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadBubbleCoral => Some(Block::DeadBubbleCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadFireCoral => Some(Block::DeadFireCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadHornCoral => Some(Block::DeadHornCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadTubeCoral => Some(Block::DeadTubeCoral {
				waterlogged: ctx.is_in_water(),
			}),
			Item::TubeCoralFan => Some(Block::TubeCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::BrainCoralFan => Some(Block::BrainCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::BubbleCoralFan => Some(Block::BubbleCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::FireCoralFan => Some(Block::FireCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::HornCoralFan => Some(Block::HornCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadTubeCoralFan => Some(Block::DeadTubeCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadBrainCoralFan => Some(Block::DeadBrainCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadBubbleCoralFan => Some(Block::DeadBubbleCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadFireCoralFan => Some(Block::DeadFireCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeadHornCoralFan => Some(Block::DeadHornCoralFan {
				waterlogged: ctx.is_in_water(),
			}),
			Item::BlueIce => Some(Block::BlueIce),
			Item::Conduit => Some(Block::Conduit {
				waterlogged: ctx.is_in_water(),
			}),
			Item::PolishedGraniteStairs => Some(Block::PolishedGraniteStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SmoothRedSandstoneStairs => Some(Block::SmoothRedSandstoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::MossyStoneBrickStairs => Some(Block::MossyStoneBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::PolishedDioriteStairs => Some(Block::PolishedDioriteStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::MossyCobblestoneStairs => Some(Block::MossyCobblestoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::EndStoneBrickStairs => Some(Block::EndStoneBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::StoneStairs => Some(Block::StoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SmoothSandstoneStairs => Some(Block::SmoothSandstoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SmoothQuartzStairs => Some(Block::SmoothQuartzStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::GraniteStairs => Some(Block::GraniteStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::AndesiteStairs => Some(Block::AndesiteStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::RedNetherBrickStairs => Some(Block::RedNetherBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::PolishedAndesiteStairs => Some(Block::PolishedAndesiteStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::DioriteStairs => Some(Block::DioriteStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::CobbledDeepslateStairs => Some(Block::CobbledDeepslateStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::PolishedDeepslateStairs => Some(Block::PolishedDeepslateStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeepslateBrickStairs => Some(Block::DeepslateBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::DeepslateTileStairs => Some(Block::DeepslateTileStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::PolishedGraniteSlab => Some(Block::PolishedGraniteSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::SmoothRedSandstoneSlab => Some(Block::SmoothRedSandstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::MossyStoneBrickSlab => Some(Block::MossyStoneBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PolishedDioriteSlab => Some(Block::PolishedDioriteSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::MossyCobblestoneSlab => Some(Block::MossyCobblestoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::EndStoneBrickSlab => Some(Block::EndStoneBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::SmoothSandstoneSlab => Some(Block::SmoothSandstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::SmoothQuartzSlab => Some(Block::SmoothQuartzSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::GraniteSlab => Some(Block::GraniteSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::AndesiteSlab => Some(Block::AndesiteSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::RedNetherBrickSlab => Some(Block::RedNetherBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PolishedAndesiteSlab => Some(Block::PolishedAndesiteSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::DioriteSlab => Some(Block::DioriteSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::CobbledDeepslateSlab => Some(Block::CobbledDeepslateSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PolishedDeepslateSlab => Some(Block::PolishedDeepslateSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::DeepslateBrickSlab => Some(Block::DeepslateBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::DeepslateTileSlab => Some(Block::DeepslateTileSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::Scaffolding => Some(Block::Scaffolding {
				bottom: ctx.get_scaffold_is_bottom(),
				distance: ctx.get_scaffold_distance(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::Redstone => Some(Block::RedstoneWire {
				east: WireConnection::None,
				north: WireConnection::None,
				power: 0,
				south: WireConnection::None,
				west: WireConnection::None,
			}),
			Item::RedstoneTorch => Some(Block::RedstoneTorch {
				lit: true,
			}),
			Item::RedstoneBlock => Some(Block::RedstoneBlock),
			Item::Repeater => Some(Block::Repeater {
				delay: 1,
				facing: ctx.get_facing_look_horizontal_opposite(),
				locked: ctx.is_repeater_locked(),
				powered: false,
			}),
			Item::Comparator => Some(Block::Comparator {
				facing: ctx.get_facing_look_horizontal_opposite(),
				mode: ComparatorMode::Compare,
				powered: false,
			}),
			Item::Piston => Some(Block::Piston {
				extended: false,
				facing: ctx.get_facing_look_opposite(),
			}),
			Item::StickyPiston => Some(Block::StickyPiston {
				extended: false,
				facing: ctx.get_facing_look_opposite(),
			}),
			Item::SlimeBlock => Some(Block::SlimeBlock),
			Item::HoneyBlock => Some(Block::HoneyBlock),
			Item::Observer => Some(Block::Observer {
				facing: ctx.get_facing_look(),
				powered: false,
			}),
			Item::Hopper => Some(Block::Hopper {
				enabled: true,
				facing: ctx.get_facing_clicked_horizontal_opposite_else_down(),
			}),
			Item::Dispenser => Some(Block::Dispenser {
				facing: ctx.get_facing_look_opposite(),
				triggered: false,
			}),
			Item::Dropper => Some(Block::Dropper {
				facing: ctx.get_facing_look_opposite(),
				triggered: false,
			}),
			Item::Lectern => Some(Block::Lectern {
				facing: Direction::North,
				has_book: false,
				powered: false,
			}),
			Item::Target => Some(Block::Target {
				power: 0,
			}),
			Item::Lever => Some(Block::Lever {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::LightningRod => Some(Block::LightningRod {
				facing: ctx.get_facing_clicked(),
				powered: false,
				waterlogged: ctx.is_in_water(),
			}),
			Item::DaylightDetector => Some(Block::DaylightDetector {
				inverted: false,
				power: 0,
			}),
			Item::SculkSensor => Some(Block::SculkSensor {
				power: 0,
				sculk_sensor_phase: SculkSensorPhase::Inactive,
				waterlogged: ctx.is_in_water(),
			}),
			Item::TripwireHook => Some(Block::TripwireHook {
				attached: false,
				facing: Direction::North,
				powered: false,
			}),
			Item::TrappedChest => Some(Block::TrappedChest {
				facing: Direction::North,
				block_type: ChestType::Single,
				waterlogged: false,
			}),
			Item::Tnt => Some(Block::Tnt {
				unstable: false,
			}),
			Item::RedstoneLamp => Some(Block::RedstoneLamp {
				lit: ctx.has_neighbor_signal(),
			}),
			Item::NoteBlock => Some(Block::NoteBlock {
				instrument: ctx.get_instrument_modifier_below(),
				note: 0,
				powered: false,
			}),
			Item::StoneButton => Some(Block::StoneButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::PolishedBlackstoneButton => Some(Block::PolishedBlackstoneButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::OakButton => Some(Block::OakButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::SpruceButton => Some(Block::SpruceButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::BirchButton => Some(Block::BirchButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::JungleButton => Some(Block::JungleButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::AcaciaButton => Some(Block::AcaciaButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::DarkOakButton => Some(Block::DarkOakButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::MangroveButton => Some(Block::MangroveButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::CrimsonButton => Some(Block::CrimsonButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::WarpedButton => Some(Block::WarpedButton {
				face: Face::Wall,
				facing: Direction::North,
				powered: false,
			}),
			Item::StonePressurePlate => Some(Block::StonePressurePlate {
				powered: false,
			}),
			Item::PolishedBlackstonePressurePlate => Some(Block::PolishedBlackstonePressurePlate {
				powered: false,
			}),
			Item::LightWeightedPressurePlate => Some(Block::LightWeightedPressurePlate {
				power: 0,
			}),
			Item::HeavyWeightedPressurePlate => Some(Block::HeavyWeightedPressurePlate {
				power: 0,
			}),
			Item::OakPressurePlate => Some(Block::OakPressurePlate {
				powered: false,
			}),
			Item::SprucePressurePlate => Some(Block::SprucePressurePlate {
				powered: false,
			}),
			Item::BirchPressurePlate => Some(Block::BirchPressurePlate {
				powered: false,
			}),
			Item::JunglePressurePlate => Some(Block::JunglePressurePlate {
				powered: false,
			}),
			Item::AcaciaPressurePlate => Some(Block::AcaciaPressurePlate {
				powered: false,
			}),
			Item::DarkOakPressurePlate => Some(Block::DarkOakPressurePlate {
				powered: false,
			}),
			Item::MangrovePressurePlate => Some(Block::MangrovePressurePlate {
				powered: false,
			}),
			Item::CrimsonPressurePlate => Some(Block::CrimsonPressurePlate {
				powered: false,
			}),
			Item::WarpedPressurePlate => Some(Block::WarpedPressurePlate {
				powered: false,
			}),
			Item::IronDoor => Some(Block::IronDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::OakDoor => Some(Block::OakDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::SpruceDoor => Some(Block::SpruceDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::BirchDoor => Some(Block::BirchDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::JungleDoor => Some(Block::JungleDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::AcaciaDoor => Some(Block::AcaciaDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::DarkOakDoor => Some(Block::DarkOakDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::MangroveDoor => Some(Block::MangroveDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::CrimsonDoor => Some(Block::CrimsonDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::WarpedDoor => Some(Block::WarpedDoor {
				facing: Direction::North,
				half: UpperOrLower::Lower,
				hinge: Hinge::Left,
				open: false,
				powered: false,
			}),
			Item::IronTrapdoor => Some(Block::IronTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::OakTrapdoor => Some(Block::OakTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::SpruceTrapdoor => Some(Block::SpruceTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::BirchTrapdoor => Some(Block::BirchTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::JungleTrapdoor => Some(Block::JungleTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::AcaciaTrapdoor => Some(Block::AcaciaTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::DarkOakTrapdoor => Some(Block::DarkOakTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::MangroveTrapdoor => Some(Block::MangroveTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::CrimsonTrapdoor => Some(Block::CrimsonTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::WarpedTrapdoor => Some(Block::WarpedTrapdoor {
				facing: Direction::North,
				half: Half::Bottom,
				open: false,
				powered: false,
				waterlogged: false,
			}),
			Item::OakFenceGate => Some(Block::OakFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::SpruceFenceGate => Some(Block::SpruceFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::BirchFenceGate => Some(Block::BirchFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::JungleFenceGate => Some(Block::JungleFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::AcaciaFenceGate => Some(Block::AcaciaFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::DarkOakFenceGate => Some(Block::DarkOakFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::MangroveFenceGate => Some(Block::MangroveFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::CrimsonFenceGate => Some(Block::CrimsonFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::WarpedFenceGate => Some(Block::WarpedFenceGate {
				facing: Direction::North,
				in_wall: false,
				open: false,
				powered: false,
			}),
			Item::PoweredRail => Some(Block::PoweredRail {
				powered: false,
				shape: ctx.get_rail_shape_straight(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::DetectorRail => Some(Block::DetectorRail {
				powered: false,
				shape: ctx.get_rail_shape_straight(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::Rail => Some(Block::Rail {
				shape: ctx.get_rail_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::ActivatorRail => Some(Block::ActivatorRail {
				powered: false,
				shape: ctx.get_rail_shape_straight(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::StructureBlock => Some(Block::StructureBlock {
				mode: StructureBlockMode::Load,
			}),
			Item::Jigsaw => Some(Block::Jigsaw {
				orientation: Orientation::NorthUp,
			}),
			Item::String => Some(Block::Tripwire {
				attached: false,
				disarmed: false,
				east: ctx.get_tripwire_should_connect_east(),
				north: ctx.get_tripwire_should_connect_north(),
				powered: false,
				south: ctx.get_tripwire_should_connect_south(),
				west: ctx.get_tripwire_should_connect_west(),
			}),
			Item::WheatSeeds => Some(Block::Wheat {
				age: 0,
			}),
			Item::OakSign => Some(Block::OakSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SpruceSign => Some(Block::SpruceSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::BirchSign => Some(Block::BirchSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::JungleSign => Some(Block::JungleSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::AcaciaSign => Some(Block::AcaciaSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::DarkOakSign => Some(Block::DarkOakSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::MangroveSign => Some(Block::MangroveSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::CrimsonSign => Some(Block::CrimsonSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::WarpedSign => Some(Block::WarpedSign {
				rotation: ctx.get_rotation_16_flipped(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::PowderSnowBucket => Some(Block::PowderSnow),
			Item::DriedKelpBlock => Some(Block::DriedKelpBlock),
			Item::CocoaBeans => Some(Block::Cocoa {
				age: 0,
				facing: Direction::North,
			}),
			Item::Cake => Some(Block::Cake {
				bites: 0,
			}),
			Item::WhiteBed => Some(Block::WhiteBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::OrangeBed => Some(Block::OrangeBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::MagentaBed => Some(Block::MagentaBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::LightBlueBed => Some(Block::LightBlueBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::YellowBed => Some(Block::YellowBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::LimeBed => Some(Block::LimeBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::PinkBed => Some(Block::PinkBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::GrayBed => Some(Block::GrayBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::LightGrayBed => Some(Block::LightGrayBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::CyanBed => Some(Block::CyanBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::PurpleBed => Some(Block::PurpleBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::BlueBed => Some(Block::BlueBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::BrownBed => Some(Block::BrownBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::GreenBed => Some(Block::GreenBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::RedBed => Some(Block::RedBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::BlackBed => Some(Block::BlackBed {
				facing: Direction::North,
				occupied: false,
				part: Part::Foot,
			}),
			Item::PumpkinSeeds => Some(Block::PumpkinStem {
				age: 0,
			}),
			Item::MelonSeeds => Some(Block::MelonStem {
				age: 0,
			}),
			Item::NetherWart => Some(Block::NetherWart {
				age: 0,
			}),
			Item::BrewingStand => Some(Block::BrewingStand {
				has_bottle_0: false,
				has_bottle_1: false,
				has_bottle_2: false,
			}),
			Item::Cauldron => Some(Block::Cauldron),
			Item::FlowerPot => Some(Block::FlowerPot),
			Item::Carrot => Some(Block::Carrots {
				age: 0,
			}),
			Item::Potato => Some(Block::Potatoes {
				age: 0,
			}),
			Item::SkeletonSkull => Some(Block::SkeletonSkull {
				rotation: ctx.get_rotation_16(),
			}),
			Item::WitherSkeletonSkull => Some(Block::WitherSkeletonSkull {
				rotation: ctx.get_rotation_16(),
			}),
			Item::PlayerHead => Some(Block::PlayerHead {
				rotation: ctx.get_rotation_16(),
			}),
			Item::ZombieHead => Some(Block::ZombieHead {
				rotation: ctx.get_rotation_16(),
			}),
			Item::CreeperHead => Some(Block::CreeperHead {
				rotation: ctx.get_rotation_16(),
			}),
			Item::DragonHead => Some(Block::DragonHead {
				rotation: ctx.get_rotation_16(),
			}),
			Item::WhiteBanner => Some(Block::WhiteBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::OrangeBanner => Some(Block::OrangeBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::MagentaBanner => Some(Block::MagentaBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::LightBlueBanner => Some(Block::LightBlueBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::YellowBanner => Some(Block::YellowBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::LimeBanner => Some(Block::LimeBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::PinkBanner => Some(Block::PinkBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::GrayBanner => Some(Block::GrayBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::LightGrayBanner => Some(Block::LightGrayBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::CyanBanner => Some(Block::CyanBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::PurpleBanner => Some(Block::PurpleBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::BlueBanner => Some(Block::BlueBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::BrownBanner => Some(Block::BrownBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::GreenBanner => Some(Block::GreenBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::RedBanner => Some(Block::RedBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::BlackBanner => Some(Block::BlackBanner {
				rotation: ctx.get_rotation_16_flipped(),
			}),
			Item::BeetrootSeeds => Some(Block::Beetroots {
				age: 0,
			}),
			Item::Loom => Some(Block::Loom {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::Composter => Some(Block::Composter {
				level: 0,
			}),
			Item::Barrel => Some(Block::Barrel {
				facing: ctx.get_facing_look_opposite(),
				open: false,
			}),
			Item::Smoker => Some(Block::Smoker {
				facing: ctx.get_facing_look_horizontal_opposite(),
				lit: false,
			}),
			Item::BlastFurnace => Some(Block::BlastFurnace {
				facing: ctx.get_facing_look_horizontal_opposite(),
				lit: false,
			}),
			Item::CartographyTable => Some(Block::CartographyTable),
			Item::FletchingTable => Some(Block::FletchingTable),
			Item::Grindstone => Some(Block::Grindstone {
				face: Face::Wall,
				facing: Direction::North,
			}),
			Item::SmithingTable => Some(Block::SmithingTable),
			Item::Stonecutter => Some(Block::Stonecutter {
				facing: ctx.get_facing_look_horizontal_opposite(),
			}),
			Item::Bell => Some(Block::Bell {
				attachment: Attachment::Floor,
				facing: Direction::North,
				powered: false,
			}),
			Item::Lantern => Some(Block::Lantern {
				hanging: ctx.get_hanging(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SoulLantern => Some(Block::SoulLantern {
				hanging: ctx.get_hanging(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SweetBerries => Some(Block::SweetBerryBush {
				age: 0,
			}),
			Item::GlowBerries => Some(Block::CaveVines {
				age: ctx.get_random_25(),
				berries: false,
			}),
			Item::Campfire => Some(Block::Campfire {
				facing: ctx.get_facing_look_horizontal(),
				lit: ctx.is_not_in_water(),
				signal_fire: ctx.has_smoke_source_below(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::SoulCampfire => Some(Block::SoulCampfire {
				facing: ctx.get_facing_look_horizontal(),
				lit: ctx.is_not_in_water(),
				signal_fire: ctx.has_smoke_source_below(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::Shroomlight => Some(Block::Shroomlight),
			Item::BeeNest => Some(Block::BeeNest {
				facing: ctx.get_facing_look_horizontal_opposite(),
				honey_level: 0,
			}),
			Item::Beehive => Some(Block::Beehive {
				facing: ctx.get_facing_look_horizontal_opposite(),
				honey_level: 0,
			}),
			Item::HoneycombBlock => Some(Block::HoneycombBlock),
			Item::Lodestone => Some(Block::Lodestone),
			Item::CryingObsidian => Some(Block::CryingObsidian),
			Item::Blackstone => Some(Block::Blackstone),
			Item::BlackstoneSlab => Some(Block::BlackstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::BlackstoneStairs => Some(Block::BlackstoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::GildedBlackstone => Some(Block::GildedBlackstone),
			Item::PolishedBlackstone => Some(Block::PolishedBlackstone),
			Item::PolishedBlackstoneSlab => Some(Block::PolishedBlackstoneSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PolishedBlackstoneStairs => Some(Block::PolishedBlackstoneStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::ChiseledPolishedBlackstone => Some(Block::ChiseledPolishedBlackstone),
			Item::PolishedBlackstoneBricks => Some(Block::PolishedBlackstoneBricks),
			Item::PolishedBlackstoneBrickSlab => Some(Block::PolishedBlackstoneBrickSlab {
				block_type: SlabType::Bottom,
				waterlogged: false,
			}),
			Item::PolishedBlackstoneBrickStairs => Some(Block::PolishedBlackstoneBrickStairs {
				facing: ctx.get_facing_look_horizontal(),
				half: ctx.get_clicked_half(),
				shape: ctx.get_stair_shape(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::CrackedPolishedBlackstoneBricks => Some(Block::CrackedPolishedBlackstoneBricks),
			Item::RespawnAnchor => Some(Block::RespawnAnchor {
				charges: 0,
			}),
			Item::Candle => Some(Block::Candle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::WhiteCandle => Some(Block::WhiteCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::OrangeCandle => Some(Block::OrangeCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::MagentaCandle => Some(Block::MagentaCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::LightBlueCandle => Some(Block::LightBlueCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::YellowCandle => Some(Block::YellowCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::LimeCandle => Some(Block::LimeCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::PinkCandle => Some(Block::PinkCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::GrayCandle => Some(Block::GrayCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::LightGrayCandle => Some(Block::LightGrayCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::CyanCandle => Some(Block::CyanCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::PurpleCandle => Some(Block::PurpleCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::BlueCandle => Some(Block::BlueCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::BrownCandle => Some(Block::BrownCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::GreenCandle => Some(Block::GreenCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::RedCandle => Some(Block::RedCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::BlackCandle => Some(Block::BlackCandle {
				candles: 1,
				lit: false,
				waterlogged: false,
			}),
			Item::SmallAmethystBud => Some(Block::SmallAmethystBud {
				facing: ctx.get_facing_clicked(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::MediumAmethystBud => Some(Block::MediumAmethystBud {
				facing: ctx.get_facing_clicked(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::LargeAmethystBud => Some(Block::LargeAmethystBud {
				facing: ctx.get_facing_clicked(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::AmethystCluster => Some(Block::AmethystCluster {
				facing: ctx.get_facing_clicked(),
				waterlogged: ctx.is_in_water(),
			}),
			Item::PointedDripstone => Some(Block::PointedDripstone {
				thickness: Thickness::Tip,
				vertical_direction: VerticalDirection::Up,
				waterlogged: false,
			}),
			Item::OchreFroglight => Some(Block::OchreFroglight {
				axis: ctx.get_clicked_axis(),
			}),
			Item::VerdantFroglight => Some(Block::VerdantFroglight {
				axis: ctx.get_clicked_axis(),
			}),
			Item::PearlescentFroglight => Some(Block::PearlescentFroglight {
				axis: ctx.get_clicked_axis(),
			}),
			Item::Frogspawn => Some(Block::Frogspawn),
			_ => None
		}
	}
}

